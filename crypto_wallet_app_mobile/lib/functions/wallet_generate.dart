// lib/functions/wallet_generate.dart

import 'package:flutter/foundation.dart'; // For debugPrint
import 'dart:math'; // Required for Random to generate the suffix

class GenerateWalletName {
  String?
  _currentGeneratedName; // Stores the name generated by the last call to generateNewWallet

  String? getLastWallet() {
    return _currentGeneratedName;
  }

  Future<void> generateNewWallet({
    required List<String> existingWalletNames,
  }) async {
    int maxExistingIndex = 0;
    final RegExp walletNameRegex = RegExp(r'^Wallet(\d+)-([A-Z0-9]{3})$');

    for (String name in existingWalletNames) {
      final match = walletNameRegex.firstMatch(name);
      if (match != null) {
        final int? number = int.tryParse(match.group(1)!);
        if (number != null && number > maxExistingIndex) {
          maxExistingIndex = number;
        }
      }
    }

    int newIndex = maxExistingIndex + 1;
    String suffix = _generateAlphanumericSuffix();

    _currentGeneratedName = 'Wallet$newIndex-$suffix';

    if (kDebugMode) {
      print(
        'Added new wallet with name: $_currentGeneratedName (based on max index $maxExistingIndex)',
      );
    }
  }

  String _generateAlphanumericSuffix() {
    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789';
    Random random = Random();
    return String.fromCharCodes(
      Iterable.generate(
        3,
        (_) => chars.codeUnitAt(random.nextInt(chars.length)),
      ),
    );
  }
}
